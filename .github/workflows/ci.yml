# .github/workflows/ci.yml
name: CI

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: windows-latest
    steps:

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Rubberduck via Chocolatey
        shell: pwsh
        run: |
          choco install rubberduck -y

      - name: Check for VBA modules
        id: vba_check
        shell: pwsh
        run: |
          # load the ZIP APIs
          Add-Type -AssemblyName System.IO.Compression.FileSystem

          $xlsmPath = "workbook\ETL_Accelerator.xlsm"
          $found = $false

          try {
            $zip = [System.IO.Compression.ZipFile]::OpenRead($xlsmPath)
            if ($zip.Entries | Where-Object { $_.FullName -eq 'xl/vbaProject.bin' }) {
              $found = $true
            }
            $zip.Dispose()
          }
          catch {
            Write-Warning "⚠️ ZIP inspection failed: $($_.Exception.Message)"
            Write-Warning "Assuming VBA modules are present."
            $found = $true
          }

          # export the boolean
          Add-Content -Path $env:GITHUB_OUTPUT -Value "hasModules=$found"

      - name: Inspect & Run VBA Tests
        if: steps.vba_check.outputs.hasModules == 'true'
        shell: pwsh
        run: |
          # locate the CLI: try PATH, then chocolatey lib, then ProgramData
          $cli = (Get-Command Rubberduck.CLI.exe -ErrorAction SilentlyContinue)?.Source
          $candidates = @(
            "$env:ALLUSERSPROFILE\chocolatey\lib\rubberduck\tools\Rubberduck.CLI.exe",
            "C:\ProgramData\rubberduck\Rubberduck.CLI.exe"
          )
          foreach ($p in $candidates) {
            if (-not $cli -and Test-Path $p) { $cli = $p }
          }
          if (-not $cli) {
            Write-Error "❌ Rubberduck CLI not found on PATH or in known locations."
            exit 1
          }
          Write-Host "✅ Using Rubberduck CLI at: $cli"
          & $cli inspect --project "workbook\ETL_Accelerator.xlsm" --tests all

      - name: Skip Rubberduck (no VBA)
        if: steps.vba_check.outputs.hasModules != 'true'
        shell: pwsh
        run: |
          Write-Host "ℹ️ No VBA modules detected; skipping Rubberduck CLI."
